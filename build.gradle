plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.1.1"
	id 'jacoco'

}


group = 'com.eci.ieti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = "0.8.5"
	// Custom reports directory can be specfied like this:
	// reportsDir = file("$buildDir/customJacocoReportDir")
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}


jacocoTestReport {
	reports {
		html.enabled = true
		xml.enabled = true
		csv.enabled = true
	}
	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/com/eci/ieti/BagTravBackendApp**',
										"**/com/eci/ieti/model**"])
		})
	}
}

sonarqube {
	properties {
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.projectKey", "X-Viss_IETI---PROJECT-BACKEND"
		property "sonar.organization", "x-viss"
		property "sonar.projectName", "X-VISS-BACKEND"
		property "sonar.java.source", "1.8"
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.tests", "src/test"
		property "sonar.java.test.binaries", "build/classes/java/test"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/codeCoverageReport.xml"
		property 'sonar.coverage.exclusions', ['**/com/eci/ieti/BagTravBackendApp**'
		, "**/com/eci/ieti/model**"
		, "**/com/eci/ieti/exceptions**"]
	}
}



dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb', version: '2.4.4'
	testImplementation group: 'de.flapdoodle.embed', name: 'de.flapdoodle.embed.mongo', version: '2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
  	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation('io.jsonwebtoken:jjwt:0.6.0')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
	implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	compileOnly 'org.projectlombok:lombok:1.18.16'
	annotationProcessor 'org.projectlombok:lombok:1.18.16'

	testCompileOnly 'org.projectlombok:lombok:1.18.16'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.16'
}

tasks.sonarqube.dependsOn(jacocoTestReport)