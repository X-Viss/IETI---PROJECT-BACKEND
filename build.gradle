plugins {
	id 'org.springframework.boot' version '2.1.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.1.1"
	id 'jacoco'

}


group = 'com.eci.ieti'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = "0.8.5"
	// Custom reports directory can be specfied like this:
	// reportsDir = file("$buildDir/customJacocoReportDir")
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}


jacocoTestReport {
	reports {
		html.enabled = true
		xml.enabled = true
		csv.enabled = true
	}
	afterEvaluate {
		getClassDirectories().setFrom(classDirectories.files.collect {
			fileTree(dir: it, exclude: ['**/com/eci/ieti/SpringBootApplication**'])
		})
	}
}

sonarqube {
	properties {
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.projectKey","X-VISS"
		property "sonar.projectName", "X-VISS-BACKEND"
		property "sonar.java.source", "1.8"
		property "sonar.organization", "X-VISS"
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.tests", "src/test"
		property "sonar.java.test.binaries", "build/classes/java/test"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/codeCoverageReport.xml"
	}
}

tasks.sonarqube.dependsOn(jacocoTestReport)

dependencies {
	implementation('io.jsonwebtoken:jjwt:0.6.0')
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntime("org.junit.jupiter:junit-jupiter-engine:5.5.2")
	testRuntime("org.junit.platform:junit-platform-runner:1.5.2")
	implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
	implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
}
